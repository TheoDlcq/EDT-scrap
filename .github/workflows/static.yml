name: Build & Publish EDT (Pages)

on:
  workflow_dispatch:
    inputs:
      date:
        description: "Lundi de la semaine (YYYY-MM-DD). Par défaut: semaine en cours"
        required: false
  schedule:
    - cron: "10 5 * * 1"   # chaque lundi matin (UTC)
  push:
    branches: [ main, master ]
    paths:
      - "fetch_edt_requests.py"
      - "**/build_site.py"
      - ".github/workflows/static.yml"
      - "requirements.txt"

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; else pip install requests beautifulsoup4; fi

      - name: Compute target Monday
        id: date
        shell: bash
        run: |
          if [ -n "${{ github.event.inputs.date }}" ]; then
            echo "DATE=${{ github.event.inputs.date }}" >> "$GITHUB_OUTPUT"
          else
            dow=$(date +%u)                # 1=Mon ... 7=Sun
            delta=$((dow-1))
            monday=$(date -d "today - $delta days" +%F)
            echo "DATE=$monday" >> "$GITHUB_OUTPUT"
          fi
          echo "Target week: ${{ steps.date.outputs.DATE }}"

      - name: Run scraper → week.json
        env:
          WIGOR_USER: ${{ secrets.WIGOR_USER }}
          WIGOR_PASS: ${{ secrets.WIGOR_PASS }}
        run: |
          mkdir -p public
          python fetch_edt_requests.py --date "${{ steps.date.outputs.DATE }}" --json public/week.json > public/console.txt

      - name: Build site (ICS + index)
        env:
          WEEKDATE: ${{ steps.date.outputs.DATE }}
        shell: bash
        run: |
          set -e
          mkdir -p public
          # Chercher le script à différents emplacements possibles
          SCRIPT=""
          for candidate in \
            scripts/build_site.py \
            .github/workflows/build_site.py \
            .github/workflows/scripts/build_site.py \
            .github/build_site.py \
            build_site.py \
            .github/workflows/script/build_site.py \
            .github/script/build_site.py
          do
            if [ -f "$candidate" ]; then
              SCRIPT="$candidate"
              break
            fi
          done
          if [ -z "$SCRIPT" ]; then
            echo "❌ build_site.py introuvable. Arborescence (3 niveaux):" >&2
            find . -maxdepth 3 -type f -name "build_site.py" || true
            exit 1
          fi
          echo "➡️  Utilisation de: $SCRIPT"
          python "$SCRIPT" --json public/week.json --monday "$WEEKDATE" --out public

      - name: Upload artifact (Pages)
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
